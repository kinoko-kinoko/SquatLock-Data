name: Manus merge (all countries, nested folders OK)

on:
  push:
    paths:
      - "data/manus/**"

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Find Manus JSON files
        id: files
        run: |
          FILES=()
          while IFS= read -r f; do
            FILES+=("$f")
          done < <(git diff --name-only ${{ github.event.before }}...HEAD | grep -E '^data/manus/.*\.json$' || true)

          if [ ${#FILES[@]} -eq 0 ]; then
            echo "No manus files found. Exiting."
            exit 0
          fi

          echo "Found ${#FILES[@]} file(s)."
          printf "%s\n" "${FILES[@]}" > files.txt
          echo "files=$(cat files.txt)" >> "$GITHUB_OUTPUT"

      - name: Build country→files map
        id: map
        shell: bash
        run: |
          printf "%s\n" $(cat files.txt) | python - <<'PY' | sed '1s/^/by_cc=/'
          import json, sys, re
          by_cc = {}
          for p in (l.strip() for l in sys.stdin if l.strip()):
              # data/manus/<cc>/manus_<cc>_YYYYMMDD.json でも data/manus/manus_<cc>_YYYYMMDD.json でもOK
              m = re.search(r"data/manus/(?:([a-z]{2})/)?manus_([a-z]{2})_\d{8}\.json$", p)
              if not m:
                  continue
              cc = (m.group(1) or m.group(2)).lower()
              by_cc.setdefault(cc, []).append(p)
          print(json.dumps(by_cc))
          PY
          >> "$GITHUB_OUTPUT"

      - name: Merge into catalogs
        run: |
          python - <<'PY'
          import json, pathlib, sys

          # 入力: 前ステップからのマップ
          raw = """${{ steps.map.outputs.by_cc }}"""
          by_cc = json.loads(raw)

          for cc, files in by_cc.items():
              out_path = pathlib.Path(f"scripts/catalog_{cc}.json")
              print(f"→ Merging {len(files)} files into {out_path}")

              # 既存カタログをロード
              if out_path.exists():
                  catalog = json.loads(out_path.read_text())
              else:
                  catalog = []

              # id をキーに既存をマップ化
              by_id = {app["id"]: app for app in catalog if "id" in app}

              for f in files:
                  data = json.loads(pathlib.Path(f).read_text())
                  for app in data:
                      app.setdefault("source", {})
                      app["source"]["via"] = "manus"
                      if "id" in app:
                          by_id[app["id"]] = app
                      else:
                          # id 無しはそのまま追加
                          key = app.get("name")
                          by_id[key] = app

              new_catalog = list(by_id.values())
              out_path.write_text(json.dumps(new_catalog, ensure_ascii=False, indent=2))
          PY

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add scripts/
          git commit -m "chore(manus): update catalogs $(date +'%Y-%m-%d')" || echo "No changes"
          git push
